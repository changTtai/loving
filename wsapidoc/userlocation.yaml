swagger: '2.0'
info:
  title: user location
  description: Move your app forward with the UserLocation API 
  version: 1.0.0
host: '103.245.128.220:8087'
schemes:
  - http
  - https
consumes:
  - application/hal+json
produces:
  - application/hal+json
paths:
  /users/{userId}/locations/subscribers:
    post:
      summary: Subscriber user.
      description:
        Subscriber user.
      parameters:
        - name: userId
          in: path
          type: string
          description: called subscriber userId.
          required: true
          format: uuid
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '201':
          description: add a new subscribers
    get:
      summary: search subscribers with page
      description:
        According to user's search params return subscribers page.
      parameters:
        - name: userId
          in: path
          type: string
          description: called subscriber userId.
          required: true
          format: uuid
        - name: size
          in: query
          description: number each page shows article data.
          required: false
          type: number
        - name: page
          in: query
          description: current page number.
          required: false
          type: number
        - name: nextId
          in: query
          description: "next page need the current page's last id ."
          required: false
          type: string
        - name: previousId
          in: query
          description: "previous page need the current page's first id ."
          required: false
          type: string
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '200':
          description: subscribers page list
          schema:
            type: array
            items:
              $ref: '#/definitions/subscribers'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{userId}/locations/subscribers/{subscriberId}:
    get:
      summary: search subscribers by id.
      description:
        search subscribers by id.
      parameters:
        - name: userId
          in: path
          type: string
          description: called subscriber userId.
          required: true
          format: uuid
        - name: subscriberId
          in: path
          type: string
          description: subscriberId of the notification.
          required: true
          format: uuid
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '200':
          description: subscribers page list
          schema:
            type: array
            items:
              $ref: '#/definitions/subscribersDetails'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: delete a subscriber by id.
      description: delete a subscriber by id.
      parameters:
        - name: userId
          in: path
          type: string
          description: userId of the notification.
          required: true
          format: uuid
        - name: subscriberId
          in: path
          type: string
          description: subscriberId of the notification.
          required: true
          format: uuid
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /mysettings:
     post:
        summary: Add user channel of baidu.
        description:
          Add user channel of baidu.
        parameters:
          - name: channel
            in: body
            description: The channel id JSON you want to post
            schema:
               $ref: '#/definitions/addMysettings'
            required: true
          - name: X-Token
            in: header
            default: '{X-Token}'
            description: Oauth token code.
            required: true  
            type: string
        tags:
         - User location Baidu Push
        responses:
          '201':
           description: Baidu push channel successfully added.            
  /myobservables.onoffsome:
    post:
      summary: Bulk changes to my receive state.
      description:
        Bulk changes if I subscribe to push receiving push information.
      consumes:
      - application/vnd.jiahua.commands.onoffsome+json
      parameters:
        - name: onoffsome
          in: body
          description: Bulk changes if I subscribe to push receiving push information
          schema:
            type: array
            items:
             $ref: '#/definitions/addMyobservables'
          required: true
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '202':
          description: Modify the monitoring status of success     
  /myobservables.onoffall:
    post:
      summary: Modify my all receiving state.
      description:
        Modify all subscribe to the push is received push information.
      consumes:
      - application/vnd.jiahua.commands.onoffall+json
      parameters:
        - name: onoffall
          in: body
          description: Receiving state.
          schema:
            items:
             $ref: '#/definitions/addOnoffall'
          required: true
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '202':
          description: Modify the monitoring status of success 
  /users/locations/myobservables:
    get:
      summary: search subscribers with page
      description:
        According to user's search params return subscribers page.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '200':
          description: subscribers page list
          schema:
            type: array
            items:
              $ref: '#/definitions/myobservablesDetails'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'         
  /users/{userId}/locationobservables:
    get:
      summary: search subscribers with page
      description:
        According to user's search params return subscribers page.
      parameters:
        - name: userId
          in: path
          type: string
          description: user id.
          required: true
          format: uuid
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
      tags:
        - User location Baidu Push
      responses:
        '200':
          description: subscribers page list
          schema:
            type: array
            items:
              $ref: '#/definitions/myobservablesDetails'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'  

  /mylocations:
    post:
      summary: Upload the current user's location information.
      description: Upload the current user's location information.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
        - name: locationAddRequest
          in: body
          description: The add location you want to post
          schema:
            $ref: '#/definitions/locationAddRequest'
          required: true
      tags:
        - User Location Updater
      responses:
        '201':
          description: Make a new location
    get:
      summary: search my locations with page
      description:
        According to user's search params return locations page.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
        - name: size
          in: query
          description: number each page shows article data.
          required: false
          type: number
        - name: page
          in: query
          description: current page number.
          required: false
          type: number
        - name: updatedDate
          in: query
          description: search updated date .
          required: false
          type: string
        - name: nextId
          in: query
          description: "next page need the current page's last id ."
          required: false
          type: string
        - name: previousId
          in: query
          description: "previous page need the current page's first id ."
          required: false
          type: string
      tags:
        - User Location Updater
      responses:
        '200':
          description: locations page list
          schema:
            type: array
            items:
              $ref: '#/definitions/locationsResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/users/{userId}/locations':
    get:
      summary: search user locations with page
      description:
        According to user's search params return locations page.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true  
          type: string
        - name: userId
          in: path
          type: string
          description: ID of the user.
          required: true
          format: uuid
        - name: size
          in: query
          description: number each page shows article data.
          required: false
          type: number
        - name: page
          in: query
          description: current page number.
          required: false
          type: number
        - name: updatedDate
          in: query
          description: search updated date .
          required: false
          type: string
        - name: nextId
          in: query
          description: "next page need the current page's last id ."
          required: false
          type: string
        - name: previousId
          in: query
          description: "previous page need the current page's first id ."
          required: false
          type: string
      tags:
        - User Location Updater
      responses:
        '200':
          description: locations page list
          schema:
            type: array
            items:
              $ref: '#/definitions/locationsResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'          
  /users/searchlocation:
    post:
      summary: create a new user location.
      description: create a new user location.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true
          type: string
          format: double
        - name: userLocations
          in: body
          description: Longitude component of location.
          required: true
          schema:
            $ref: '#/definitions/userLocation'
      tags:
        - User Location Search 
      responses:
        '201':
          description: return status code after create user location success.
          schema:
            type: string
           
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/searchlocation/byfence:
    get:
      summary: find all users locations within electronic fence.
      description: find all users locations within electronic fence.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true
          type: string
          format: double
        - name: topLeftLat
          in: query
          description: Oauth2 token code.
          required: true
          type: string
          format: double      
        - name: topLeftLon
          in: query
          description: Oauth2 token code.
          required: true
          type: string
          format: double
        - name: bottomRightLat
          in: query
          description: Oauth2 token code.
          required: true
          type: string
          format: double
        - name: bottomRightLon
          in: query
          description: Oauth2 token code.
          required: true
          type: string
          format: double 
        - name: page
          in: query
          description: current page.
          required: false
          type: number
          format: int
        - name: size
          in: query
          description: page size.
          required: false
          type: number
          format: int
      tags:
        - User Location Search 
      responses:
        '200':
          description: return status code after find user location success.
          schema:
            $ref: '#/definitions/userLocations'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /users/{userId}/searchlocation:
    get:
      summary: find an existing user locations by userId.
      description: find an existing user locations by userId.
      consumes:
      - application/vnd.jiahua.commands.locationlastone+json
      produces:
      - application/vnd.jiahua.commands.locationlastone+json
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true
          type: string
          format: double
        - name: userId
          in: path
          description: id of user.
          required: true
          type: string        
      tags:
        - User Location Search 
      responses:
        '200':
          description: return status code after find user location success.
          schema:
            $ref: '#/definitions/userLocation'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /users/{userId}/searchlocation/bytime:
    get:
      summary: find all users locations between start time and end time by userId .
      description: find all users locations between start time and end time  by userId.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true
          type: string
          format: double
        - name: userId
          in: path
          description: id of user.
          required: true
          type: string
        - name: start
          in: query
          description: query start time.
          required: false
          type: string
        - name: end
          in: query
          description: query end time.
          required: false
          type: string
        - name: page
          in: query
          description: current page.
          required: false
          type: number
          format: int
        - name: size
          in: query
          description: page size.
          required: false
          type: number
          format: int      
      tags:
        - User Location Search 
      responses:
        '200':
          description: return status code after find user location success.
          schema:
            $ref: '#/definitions/userLocations'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'   
            
  /users/searchlocation/{id}:
    get:
      summary: find a user location by id.
      description: find a user location by id.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true
          type: string
          format: double
        - name: id
          in: path
          description: id of user location.
          required: true
          type: string        
      
      tags:
        - User Location Search 
      responses:
        '200':
          description: return status code after find user location success.
          schema:
            $ref: '#/definitions/userLocation'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: delete a user location by id.
      description: delete a user location by id.
      parameters:
        - name: X-Token
          in: header
          default: '{X-Token}'
          description: Oauth token code.
          required: true
          type: string
          format: double
        - name: id
          in: path
          description: id of user location.
          required: true
          type: string        
      
      tags:
        - User Location Search 
      responses:
        '200':
          description: return status code after find user location success.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  userLocation:
    properties:
      name:
        type: string
        description:  name of user.
      userId:
        type: string
        description:  id of user.
      createdTime:
        type: string
        description:  createTime of user.
      channelId:
        type: string
        description:  channelId of user.
      lat:
        type: string
        description:  lat of user.
      lon:
        type: string
        description:  lon of user.
        
  userLocations:
    properties:
      _links:
        properties:
          next:
            properties:
              href:
                type: string
                description: query next page url.
          self:
            properties:
              href:
                type: string
                description: query self page url.
          prev:
            properties:
              href:
                type: string
                description: query previous page url.
      _embedded:
        properties:
          userLocationResponses:
            type: array
            items:
              $ref: '#/definitions/getUserLocation'
      page:
        properties:
          size:
            type: string
            description: page size
          totalElements:
            type: string
            description: data total
          totalPages:
            type: string
            description: page total
          number:
            type: string
            description: current page 
            
  getUserLocation:
    properties:
      name:
        type: string
        description:  name of user.
      userId:
        type: string
        description:  id of user.
      createdTime:
        type: string
        description:  createTime of user.
      channelId:
        type: string
        description:  channelId of user.
      lat:
        type: string
        description:  lat of user.
      lon:
        type: string
        description:  lon of user.
      _links:
        properties:
          self:
            properties:
              href:
                type: string
                description: get current user location information url link. 
  subscribers:
    properties:
      _links:
        properties:
          next:
            properties:
              href:
                type: string
                description: next page url.
          self:
            properties:
              href:
                type: string
                description: current page url.
          prev:
            properties:
              href:
                type: string
                description: previous page url.
      _embedded:
        properties:
          uuid:
            type: string
            description: Id of subscribers.
          push:
            type: string
            description: Whether to receive a message.
          subscriberId:
            type: string
            description: Id of subscribers.
          createdTime:
            type: string
            description: Created time of subscribers.
          _links:
            properties:
              self:
                properties:
                  href:
                    type: string
                    description: The current page.
      page:
        properties:
          size:
            type: string
            description: page size
          totalElements:
            type: string
            description: data total
          totalPages:
            type: string
            description: page total
          number:
            type: string
            description: page total
  myobservablesDetails:
    properties:
      _links:
        properties:
          next:
            properties:
              href:
                type: string
                description: next page url.
          self:
            properties:
              href:
                type: string
                description: current page url.
          prev:
            properties:
              href:
                type: string
                description: previous page url.
      _embedded:
        properties:
          uuid:
            type: string
            description: Id of subscribers.
          observablesId:
            type: string
            description: Id of observables.
          push:
            type: string
            description: Whether to receive a message.
          createdTime:
            type: string
            description: Created time of subscribers.
          _links:
            properties:
              self:
                properties:
                  href:
                    type: string
                    description: The current page.
      page:
        properties:
          size:
            type: string
            description: page size
          totalElements:
            type: string
            description: data total
          totalPages:
            type: string
            description: page total
          number:
            type: string
            description: page total          
  subscribersDetails:
      properties:
          subscriberId:
            type: string
            description: my observables resource id.
          createdTime:
            type: string
            description: Created time of subscribers.
  addMysettings:
      properties:
          channelId:
            type: string
            description: Baidu to push channel ID.
  addMyobservables:
      properties:
         observablesId:
           type: string
           description: Observables id.
         push:
           type: string
           description: push(ON or OFF).
            
  addOnoffall:
      properties:
          push:
            type: string
            description: push(ON or OFF). 
  locationsResponse:
    properties:
      _links:
        properties:
          next:
            properties:
              href:
                type: string
                description: next page url.
          self:
            properties:
              href:
                type: string
                description: current page url.
          prev:
            properties:
              href:
                type: string
                description: previous page url.
      _embedded:
        properties:
          uuid:
            type: string
            description: resourcion id
          updatedTime:
            type: string
            description: Updated time of user locaion.
          location:
            properties:
              lat:
                type: string
                description: lat of user locaion.
              lon:
                type: string
                description: lon of user location.
      page:
        properties:
          size:
            type: string
            description: page size
          totalElements:
            type: string
            description: data total
          totalPages:
            type: string
            description: page total
          number:
            type: string
            description: page total

  locationAddRequest:
    properties:
      lat:
        type: string
        description: lat of user location.
      lon:
        type: string
        description: lon of user location.
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string